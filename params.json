{
  "name": "Redis",
  "tagline": "redis, c#, in-memory, storage, database, struct",
  "body": "### O que é o REDIS\r\nEle é um projeto aberto e serve para armazenamento de dados em memória... Calma! É possível também persistí-los em disco! E também é possível definir um tempo de vida para seus dados se necessário!\r\nAs seguintes estruturas de dados são suportadas por ele: strings, hashes, listas, bitmaps, gesospatial indexes, etc. \r\nTambém é possível realizar a replicação de dados e configurar serviços de alta disponibilidade.\r\nOutra coisa bem legal é o serviço de mensageria que te permite notificar os clientes conectados quando determinados eventos acontecem.\r\n\r\n### Agora vamos instalar o REDIS no Windows\r\n[Clique aqui](https://github.com//MSOpenTech/redis/releases/download/win-3.2.100/Redis-x64-3.2.100.msi) para fazer o download da versão 3.2.100 ou se preferir copie e cole o link abaixo em seu browser:\r\n_https://github.com//MSOpenTech/redis/releases/download/win-3.2.100/Redis-x64-3.2.100.msi_\r\n\r\nDestaquei algumas coisas importantes sobre a instalação:\r\n- esta instalação já definirá o REDIS como um windows service e neste caso uma porta será definida para ele;\r\n- é recomendado definir uma quantidade máxima de memória para que ele não fique indisponível devido a um erro do tipo OUT OF MEMORY por exemplo;\r\n- após instalação, para proteger seus dados, também é recomendado definir uma senha para o seu serviço\r\n\r\nA instalação é bastante simples e você precisará definir apenas a porta e a quantidade máxima de memória.\r\nApós a instalação vá para o diretório onde o REDIS foi instalado e abra o arquivo **C:\\Program Files\\Redis\\redis.windows-service.conf**\r\nLocalize a linha **requirepass**, descomente-a e defina uma senha\r\n\r\n**requirepass** prodesp@123\r\n\r\nSerá necessário reiniciar o serviço e para isso você poderá abrir o DOS e executar\r\n- net stop redis\r\n- net start redis\r\n\r\n### Usando KEYs (GET/SET/TTL/EXPIRE)\r\n\r\nAgora vamos abrir um client terminal usando o programa redis-cli.exe dentro de C:\\Program Files\\Redis\r\nObserve que o endereço do seu servidor e a porta para conexão já estão definidos\r\n\r\nVamos nos autenticar informando a senha prodesp@123\r\nDigite **AUTH** prodesp@123\r\n\r\nAgora vamos criar uma variável chamada myKey com valor 200, digite:\r\n\r\n**set** myKey 200\r\n\r\nPara ler o valor da variável em seu banco digite\r\n\r\n**get** myKey\r\n\r\nPróximo passo vamos definir um tempo de vida de 30 segundos para esta variável usando o comando \r\n\r\n**expire** myKey 30\r\n\r\nVamos ver o tempo restante de vida usando o comando \r\n\r\n**ttl** myKey\r\n\r\nQuando a variável expirar, deixar de existir, e você digitar o comando get o retorno será NIL e não mais 200\r\n\r\nEsta é a URL contendo a lista de comandos suportados. Muito fácil e intuitivo - http://redis.io/commands\r\n\r\n### Usando REDIS no Visual Studio 2015\r\nCrie um novo projeto no Visual Studio do tipo Console Application\r\nInstale o pacote StackExchange.Redis que contém uma lib muito legal e de fácil uso\r\nAdicione ao using a linha using **StackExchange.Redis**;\r\n\r\n> A conexão ao serviço poderá ser feita de duas formas:\r\n\r\n* usando uma instância da classe ConfigurationOptions \r\n* usando uma string com seus campos separados por \",\"\r\n\r\n`var options = new ConfigurationOptions { `\r\n  `EndPoints = { { \"127.0.0.1\", 6379 } },`\r\n  `Password = \"prodesp@123\",`\r\n  `AllowAdmin = true, // este cara aqui diz ao REDIS que comandos de administração poderão ser executados`\r\n  `ClientName = \"VS2015-REDIS\"`\r\n`};`\r\n\r\n`var cm = ConnectionMultiplexer.Connect(options);`\r\n`var db = cm.GetDatabase();`\r\n\r\n**// vamos criar uma variável myKey com valor 200**\r\n\r\n`db.StringSet(\"myKey\", \"200\");`\r\n\r\n**// vamos definir o tempo de vida desta variável para 30 segundos**\r\n\r\n`var when = new TimeSpan(0, 0, 30);`\r\n`db.KeyExpire(\"myKey\", when);`\r\n\r\n**// vamos ler o valor da variável**\r\n\r\n`var value = db.StringGet(\"myKey\");`\r\n\r\n**// vamos verificar quanto tempo de vida ela ainda tem**\r\n\r\n`var time = db.KeyTimeToLive(\"myKey\").ToString();`\r\n\r\n> Como dever de casa aprendam a gravar os dados localmente, deletar variáveis, gerenciar listas, ordená-las, etc.\r\n\r\n### Authors and Contributors\r\nAutor: Renato Matos\r\n\r\nLinkedin: https://br.linkedin.com/in/renato-matos-2994b09\r\n\r\nE-mail: renato.matos79@gmail.com",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}